@using WebApp1.Models
@using WebApp1.Products
@model IEnumerable<WebApp1.Products.Productwaarde>
@{
    ViewData["Title"] = "Home Page";
    List<Productwaarde> products = Model.ToList();
}

<link rel="stylesheet" href="~/css/interactiveimage.css">
<link rel="stylesheet" href="~/css/mainpage.css">

<div class="section">
  <h1>Welkom bij de webshop!</h1>
</div>

<!-- Interactive Image         -->
<div id="mainDiv">
  <h3>Uitgelichte producten</h3>
  <div class='circle-container container' id="containerDiv">

    <a href='https://localhost:5001/Home/Mainpage' class='center' id='middle'><img src='~/images/boat.png'></a>
    <div id="cssSelectorRight" class="cssSelector">
      <!-- img1 -->
    </div>
    <div id="cssSelectorBottomRight" class="cssSelector">
      <!-- img2 -->
    </div>
    <div id="cssSelectorBottom1" class="cssSelector">
      <!-- img3 -->
    </div>
    <div id="cssSelectorBottom2" class="cssSelector">
      <!-- img4 -->
    </div>
    <div id="cssSelectorBottomLeft" class="cssSelector">
      <!-- img5 -->
    </div>
    <div id="cssSelectorLeft" class="cssSelector">
      <!-- img6s -->
    </div>
    <div id="cssSelectorTopLeft" class="cssSelector">
      <!-- img7 -->
    </div>
    <div id="cssSelectorTop1" class="cssSelector">
      <!-- img8 -->
    </div>
    <div id="cssSelectorTop2" class="cssSelector">
      <!-- img9 -->
    </div>
    <div id="cssSelectorTopRight" class="cssSelector">
      <!-- img10 -->
    </div>
  </div>
</div>


<div class="section">
  <h3>Onlangs toegevoegd</h3>
  <hr>
  <div class="container">
    <div class="row" id="products">
      <div class="col-4">
        @if (products.Count() > 0)
        {
          <div class="card" style="width: 20rem;">
            <div class="card-body">
              <form action="@Url.Action("Index", "ViewProduct")" method="get">
                <div id="container" class="form-group">
                  <img src="@("/images/products/" + products[products.Count() - 1].Image)" id="productImage"><img/>
                  <h5 class="card-title">@products[products.Count() - 1].Title</h5>
                  <div>
                    @if (products[products.Count() - 1].DiscountedPrice != -1)
                    {
                      <div class="row">
                        <div class="col-4-sm">
                          <div id="disabledPrice">€ @products[products.Count() - 1].Price</div>
                        </div>
                        <div class="col-4-sm" style="margin-left: 15px;">
                          <div id="discountPrice">NU VOOR: € @products[products.Count() - 1].DiscountedPrice</div>
                        </div>
                      </div>
                    }
                    else
                    {
                      <div>€ @products[products.Count() - 1].Price</div>
                    }
                    @if (products[products.Count() - 1].Quantity > 0)
                    {
                      <div>@string.Format("Voorraad: {0} stuk(ken)",products[products.Count() - 1].Quantity)</div>
                    }
                    else
                    {
                      <div id="outOfStock">Geen voorraad beschikbaar!</div>
                    }
                  </div>
                  <input type="hidden" name="id" value='@products[products.Count() - 1].Id'/>
                  <input type="submit" class="btn btn-primary" value="Details">
                  @if (products[products.Count() - 1].Quantity > 0)
                  {
                    <input type="submit" class="btn btn-primary" value="Zet in winkelwagen" asp-controller="cart" asp-action="buy" asp-route-id="@products[products.Count() - 1].Id" >
                  }
                </div>
              </form>
            </div>
          </div>
        }
      </div>
      <div class="col-4">
        @if (products.Count() > 1)
        {
          <div class="card" style="width: 20rem;">
            <div class="card-body">
              <form action="@Url.Action("Index", "ViewProduct")" method="get">
                <div id="container" class="form-group">
                  <img src="@("/images/products/" + products[products.Count() - 2].Image)" id="productImage"><img/>
                  <h5 class="card-title">@products[products.Count() - 2].Title</h5>
                  <div>
                    @if (products[products.Count() - 2].DiscountedPrice != -1)
                    {
                      <div class="row">
                        <div class="col-4-sm">
                          <div id="disabledPrice">€ @products[products.Count() - 2].Price</div>
                        </div>
                        <div class="col-4-sm" style="margin-left: 15px;">
                          <div id="discountPrice">NU VOOR: € @products[products.Count() - 2].DiscountedPrice</div>
                        </div>
                      </div>
                    }
                    else
                    {
                      <div>€ @products[products.Count() - 2].Price</div>
                    }
                    @if (products[products.Count() - 2].Quantity > 0)
                    {
                      <div>@string.Format("Voorraad: {0} stuk(ken)",products[products.Count() - 2].Quantity)</div>
                    }
                    else
                    {
                      <div id="outOfStock">Geen voorraad beschikbaar!</div>
                    }
                  </div>
                  <input type="hidden" name="id" value='@products[products.Count() - 2].Id'/>
                  <input type="submit" class="btn btn-primary" value="Details">
                  @if (products[products.Count() - 2].Quantity > 0)
                  {
                    <input type="submit" class="btn btn-primary" value="Zet in winkelwagen" asp-controller="cart" asp-action="buy" asp-route-id="@products[products.Count() - 2].Id" >
                  }
                </div>
              </form>
            </div>
          </div>
        }
      </div>
      <div class="col-4">
        @if (products.Count() > 2)
        {
          <div class="card" style="width: 20rem;">
            <div class="card-body">
              <form action="@Url.Action("Index", "ViewProduct")" method="get">
                <div id="container" class="form-group">
                  <img src="@("/images/products/" + products[products.Count() - 3].Image)" id="productImage"><img/>
                  <h5 class="card-title">@products[products.Count() - 2].Title</h5>
                  <div>
                    @if (products[products.Count() - 3].DiscountedPrice != -1)
                    {
                      <div class="row">
                        <div class="col-4-sm">
                          <div id="disabledPrice">€ @products[products.Count() - 3].Price</div>
                        </div>
                        <div class="col-4-sm" style="margin-left: 15px;">
                          <div id="discountPrice">NU VOOR: € @products[products.Count() - 3].DiscountedPrice</div>
                        </div>
                      </div>
                    }
                    else
                    {
                      <div>€ @products[products.Count() - 3].Price</div>
                    }
                    @if (products[products.Count() - 3].Quantity > 0)
                    {
                      <div>@string.Format("Voorraad: {0} stuk(ken)",products[products.Count() - 3].Quantity)</div>
                    }
                    else
                    {
                      <div id="outOfStock">Geen voorraad beschikbaar!</div>
                    }
                  </div>
                  <input type="hidden" name="id" value='@products[products.Count() - 3].Id'/>
                  <input type="submit" class="btn btn-primary" value="Details">
                  @if (products[products.Count() - 3].Quantity > 0)
                  {
                    <input type="submit" class="btn btn-primary" value="Zet in winkelwagen" asp-controller="cart" asp-action="buy" asp-route-id="@products[products.Count() - 3].Id" >
                  }
                </div>
              </form>
            </div>
          </div>
        }
      </div>
    </div>
  </div>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/2.2.0/anime.js"></script>
<script>
  var text = [];
  var imgs = [];

  @foreach (var item in Model)
  {
    if (item.DiscountedPrice != -1)
    {
      @:text.push("@item.Title");
    } 
  }

  @foreach (var item in Model)
  {
    if (item.DiscountedPrice != -1)
    {
      @:imgs.push('/images/products/' + "@item.Image");
    } 
  }

  var container = document.getElementsByClassName('imgDiv');
  var container2 = document.getElementsByClassName('textDiv');
  var divContainer = document.getElementsByClassName('cssSelector');
  var aContainer = document.getElementsByClassName('category');

  count = 0;

  for(var i=0; i<container.length+1; i++) {

    if (imgs[i]!=null && text[i]!=null){

      var a = document.createElement('a');
      a.href = "https://localhost:5001/ViewProduct?id="+(i+1).toString();
      a.className = "category";
      a.id = "deg" + count;
      divContainer[i].appendChild(a);

      var divInA = document.createElement('div');
      divInA.className = "textDiv";
      var divInA2 = document.createElement('div');
      divInA2.className = "imgDiv";

      aContainer[i].appendChild(divInA);
      aContainer[i].appendChild(divInA2);

      var img = document.createElement('img');
      img.src = imgs[i];
      var h = document.createElement('span');
      var t = document.createTextNode(text[i]);
      container[i].appendChild(img);
      container2[i].appendChild(t);
    
      count = count + 36;
    }
  }

  var cssSelectorRight = anime({
    targets: '#cssSelectorRight',
    translateX: "9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorLeft = anime({
    targets: '#cssSelectorLeft',
    translateX: "-9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorBottomRight = anime({
    targets: '#cssSelectorBottomRight',
    translateX: "4em",
    translateY: "9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorBottomLeft = anime({
    targets: '#cssSelectorBottomLeft',
    translateX: "-4em",
    translateY: "9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorTopLeft = anime({
    targets: '#cssSelectorTopLeft',
    translateX: "-4em",
    translateY: "-9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorTopRight = anime({
    targets: '#cssSelectorTopRight',
    translateX: "4em",
    translateY: "-9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorBottom1 = anime({
    targets: '#cssSelectorBottom1',
    translateX: "1em",
    translateY: "9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorBottom2 = anime({
    targets: '#cssSelectorBottom2',
    translateX: "-1em",
    translateY: "9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorTop1 = anime({
    targets: '#cssSelectorTop1',
    translateX: "-1em",
    translateY: "-9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorTop2 = anime({
    targets: '#cssSelectorTop2',
    translateX: "1em",
    translateY: "-9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });
</script>

