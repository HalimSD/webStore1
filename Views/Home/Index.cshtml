@using WebApp1.Models
@model IEnumerable<WebApp1.Models.Productwaarde>
@{
    ViewData["Title"] = "Home Page";
    List<Productwaarde> products = Model.ToList();
}

<link rel="stylesheet" href="~/css/interactiveimage.css">
<link rel="stylesheet" href="~/css/mainpage.css">
<link rel="stylesheet" href="~/css/image.css">
<script src="https://code.jquery.com/jquery-3.3.1.js" integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60=" crossorigin="anonymous"></script>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<div class="section">
  <h1>Welkom bij de webshop!</h1>


<img src="~/images/vessel.png" class="vessel">

<div class="popup" onclick="togglePopup1()" id="cat0">
 
    <div class="sel popuptext" id="myPopup1">
      <div id="menu" class="menu"></div>
    </div>

  <img src="~/images/circle.png" class="category" >
</div>

<div class="popup" onclick="togglePopup2()" id="cat1">
    <div class="sel popuptext" id="myPopup2">
      <div id="menu2" class="menu"></div>
    </div>
<img src="~/images/circle.png" class="category">
</div>
</div>
<script>

function menuToElement(menu) {
    const ul = document.createElement("ul");
    ul.className = "imageDropdownUl";
    for (const item of menu) {
      
        const li = document.createElement("li");
        if (Object(item) === item) {
            li.textContent = item.text + ' \u25BD';         
            li.className = "btn btn-primary";
            
            li.appendChild(menuToElement(item.children));
            

        } else {
            
            const a = document.createElement("a");
            li.appendChild(a);
            a.textContent = item;
            a.className = "btn btn-secondary";
        }
        ul.appendChild(li);
        //console.log(menu);
    }
    
    return ul;
   
}

 

var categories = [{ 
    text: "engine",
    children: ["marco",2,3,5,7,9, { 
        text: "piston",
        children: [4,5,6, { 
        text: "piston",
        children: [4,5,6]
    }]
    },10,11,12]   
}, {
    text: "tire",
    children: [7,8,9]
}];

console.log(categories[0]);

var engine = [categories[0]];
var tire = [categories[1]];

const ul = menuToElement(engine);
document.getElementById("menu").appendChild(ul);

const ul2 = menuToElement(tire);
document.getElementById("menu2").appendChild(ul2);


</script>


<script>

//When the user clicks on <div>, open the popup
for (const item of categories){
function togglePopup1() {
    var popup = document.getElementById("myPopup1");
    popup.classList.toggle("show");
}

function togglePopup2() {
    var popup = document.getElementById("myPopup2");
    popup.classList.toggle("show");
}


$(".btn-primary").on('click', function(event){  
    event.stopImmediatePropagation();
    $(this).children('.imageDropdownUl').toggle();
});



//dropdown in popup
var txt = $('.txt'),
    options = $('.options');

txt.click(function (e) {
    var dropId = $(this).attr("id");
    e.stopPropagation();


    var content = $(e.target).text();
    console.log(content);
    $('#'+ item.text).show(); 
});


$('body').click(function (e) {
    options.hide();
});
}


</script>









<!-- Interactive Image         -->
<!--<div id="mainDiv">
  <h3>Uitgelichte producten</h3>
  <div class='circle-container container' id="containerDiv">

    <a href='https://localhost:5001/Home/Mainpage' class='center' id='middle'><img src='~/images/boat.png'></a>
    <div id="cssSelectorRight" class="cssSelector">
     
    </div>
    <div id="cssSelectorBottomRight" class="cssSelector">
      
    </div>
    <div id="cssSelectorBottom1" class="cssSelector">
      
    </div>
    <div id="cssSelectorBottom2" class="cssSelector">
      
    </div>
    <div id="cssSelectorBottomLeft" class="cssSelector">
      
    </div>
    <div id="cssSelectorLeft" class="cssSelector">
      
    </div>
    <div id="cssSelectorTopLeft" class="cssSelector">
      
    </div>
    <div id="cssSelectorTop1" class="cssSelector">
      
    </div>
    <div id="cssSelectorTop2" class="cssSelector">
      
    </div>
    <div id="cssSelectorTopRight" class="cssSelector">
      
    </div>
  </div>
</div>-->





<div class="section">
  <h3>Onlangs toegevoegd</h3>
  <hr>
  <div class="container">
    <div class="row" id="products">
      <div class="col-4">
        @if (products.Count() > 0)
        {
          <div class="card" style="width: 20rem;">
            <div class="card-body">
              <form action="@Url.Action("Index", "ViewProduct")" method="get">
                <div id="container" class="form-group">
                  <img src="@("/images/products/" + products[products.Count() - 1].Image)" id="productImage"><img/>
                  <h5 class="card-title">@products[products.Count() - 1].Title</h5>
                  <div>
                    @if (products[products.Count() - 1].DiscountedPrice != -1)
                    {
                      <div class="row">
                        <div class="col-4-sm">
                          <div id="disabledPrice">€ @products[products.Count() - 1].Price</div>
                        </div>
                        <div class="col-4-sm" style="margin-left: 15px;">
                          <div id="discountPrice">NU VOOR: € @products[products.Count() - 1].DiscountedPrice</div>
                        </div>
                      </div>
                    }
                    else
                    {
                      <div>€ @products[products.Count() - 1].Price</div>
                    }
                    @if (products[products.Count() - 1].Quantity > 0)
                    {
                      <div>@string.Format("Voorraad: {0} stuk(ken)",products[products.Count() - 1].Quantity)</div>
                    }
                    else
                    {
                      <div id="outOfStock">Geen voorraad beschikbaar!</div>
                    }
                  </div>
                  <input type="hidden" name="id" value='@products[products.Count() - 1].Id'/>
                  <input type="submit" class="btn btn-primary" value="Details">
                  @if (products[products.Count() - 1].Quantity > 0)
                  {
                    <input type="submit" class="btn btn-primary" value="Zet in winkelwagen" asp-controller="cart" asp-action="buy" asp-route-id="@products[products.Count() - 1].Id" >
                  }
                </div>
              </form>
            </div>
          </div>
        }
      </div>
      <div class="col-4">
        @if (products.Count() > 1)
        {
          <div class="card" style="width: 20rem;">
            <div class="card-body">
              <form action="@Url.Action("Index", "ViewProduct")" method="get">
                <div id="container" class="form-group">
                  <img src="@("/images/products/" + products[products.Count() - 2].Image)" id="productImage"><img/>
                  <h5 class="card-title">@products[products.Count() - 2].Title</h5>
                  <div>
                    @if (products[products.Count() - 2].DiscountedPrice != -1)
                    {
                      <div class="row">
                        <div class="col-4-sm">
                          <div id="disabledPrice">€ @products[products.Count() - 2].Price</div>
                        </div>
                        <div class="col-4-sm" style="margin-left: 15px;">
                          <div id="discountPrice">NU VOOR: € @products[products.Count() - 2].DiscountedPrice</div>
                        </div>
                      </div>
                    }
                    else
                    {
                      <div>€ @products[products.Count() - 2].Price</div>
                    }
                    @if (products[products.Count() - 2].Quantity > 0)
                    {
                      <div>@string.Format("Voorraad: {0} stuk(ken)",products[products.Count() - 2].Quantity)</div>
                    }
                    else
                    {
                      <div id="outOfStock">Geen voorraad beschikbaar!</div>
                    }
                  </div>
                  <input type="hidden" name="id" value='@products[products.Count() - 2].Id'/>
                  <input type="submit" class="btn btn-primary" value="Details">
                  @if (products[products.Count() - 2].Quantity > 0)
                  {
                    <input type="submit" class="btn btn-primary" value="Zet in winkelwagen" asp-controller="cart" asp-action="buy" asp-route-id="@products[products.Count() - 2].Id" >
                  }
                </div>
              </form>
            </div>
          </div>
        }
      </div>
      <div class="col-4">
        @if (products.Count() > 2)
        {
          <div class="card" style="width: 20rem;">
            <div class="card-body">
              <form action="@Url.Action("Index", "ViewProduct")" method="get">
                <div id="container" class="form-group">
                  <img src="@("/images/products/" + products[products.Count() - 3].Image)" id="productImage"><img/>
                  <h5 class="card-title">@products[products.Count() - 2].Title</h5>
                  <div>
                    @if (products[products.Count() - 3].DiscountedPrice != -1)
                    {
                      <div class="row">
                        <div class="col-4-sm">
                          <div id="disabledPrice">€ @products[products.Count() - 3].Price</div>
                        </div>
                        <div class="col-4-sm" style="margin-left: 15px;">
                          <div id="discountPrice">NU VOOR: € @products[products.Count() - 3].DiscountedPrice</div>
                        </div>
                      </div>
                    }
                    else
                    {
                      <div>€ @products[products.Count() - 3].Price</div>
                    }
                    @if (products[products.Count() - 3].Quantity > 0)
                    {
                      <div>@string.Format("Voorraad: {0} stuk(ken)",products[products.Count() - 3].Quantity)</div>
                    }
                    else
                    {
                      <div id="outOfStock">Geen voorraad beschikbaar!</div>
                    }
                  </div>
                  <input type="hidden" name="id" value='@products[products.Count() - 3].Id'/>
                  <input type="submit" class="btn btn-primary" value="Details">
                  @if (products[products.Count() - 3].Quantity > 0)
                  {
                    <input type="submit" class="btn btn-primary" value="Zet in winkelwagen" asp-controller="cart" asp-action="buy" asp-route-id="@products[products.Count() - 3].Id" >
                  }
                </div>
              </form>
            </div>
          </div>
        }
      </div>
    </div>
  </div>
</div>


<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/2.2.0/anime.js"></script>
<script>
  var text = [];
  var imgs = [];

  @foreach (var item in Model)
  {
    if (item.DiscountedPrice != -1)
    {
      @:text.push("@item.Title");
    } 
  }

  @foreach (var item in Model)
  {
    if (item.DiscountedPrice != -1)
    {
      @:imgs.push('/images/products/' + "@item.Image");
    } 
  }

  var container = document.getElementsByClassName('imgDiv');
  var container2 = document.getElementsByClassName('textDiv');
  var divContainer = document.getElementsByClassName('cssSelector');
  var aContainer = document.getElementsByClassName('category');

  count = 0;

  for(var i=0; i<container.length+1; i++) {

    if (imgs[i]!=null && text[i]!=null){

      var a = document.createElement('a');
      a.href = "https://localhost:5001/ViewProduct?id="+(i+1).toString();
      a.className = "category";
      a.id = "deg" + count;
      divContainer[i].appendChild(a);

      var divInA = document.createElement('div');
      divInA.className = "textDiv";
      var divInA2 = document.createElement('div');
      divInA2.className = "imgDiv";

      aContainer[i].appendChild(divInA);
      aContainer[i].appendChild(divInA2);

      var img = document.createElement('img');
      img.src = imgs[i];
      var h = document.createElement('span');
      var t = document.createTextNode(text[i]);
      container[i].appendChild(img);
      container2[i].appendChild(t);
    
      count = count + 36;
    }
  }

  var cssSelectorRight = anime({
    targets: '#cssSelectorRight',
    translateX: "9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorLeft = anime({
    targets: '#cssSelectorLeft',
    translateX: "-9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorBottomRight = anime({
    targets: '#cssSelectorBottomRight',
    translateX: "4em",
    translateY: "9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorBottomLeft = anime({
    targets: '#cssSelectorBottomLeft',
    translateX: "-4em",
    translateY: "9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorTopLeft = anime({
    targets: '#cssSelectorTopLeft',
    translateX: "-4em",
    translateY: "-9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorTopRight = anime({
    targets: '#cssSelectorTopRight',
    translateX: "4em",
    translateY: "-9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorBottom1 = anime({
    targets: '#cssSelectorBottom1',
    translateX: "1em",
    translateY: "9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorBottom2 = anime({
    targets: '#cssSelectorBottom2',
    translateX: "-1em",
    translateY: "9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorTop1 = anime({
    targets: '#cssSelectorTop1',
    translateX: "-1em",
    translateY: "-9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });

  var cssSelectorTop2 = anime({
    targets: '#cssSelectorTop2',
    translateX: "1em",
    translateY: "-9em",
    opacity: 1,
    easing: 'linear',
    delay: 1000,
    duration: 2000
  });
</script> -->

